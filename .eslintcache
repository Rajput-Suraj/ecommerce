[{"G:\\reactTutorial\\ecommerce\\src\\index.js":"1","G:\\reactTutorial\\ecommerce\\src\\App.js":"2","G:\\reactTutorial\\ecommerce\\src\\components\\Products\\Products.js":"3","G:\\reactTutorial\\ecommerce\\src\\components\\Products\\Product\\Product.js":"4","G:\\reactTutorial\\ecommerce\\src\\components\\Products\\Product\\styles.js":"5","G:\\reactTutorial\\ecommerce\\src\\components\\index.js":"6","G:\\reactTutorial\\ecommerce\\src\\components\\Navbar\\Navbar.js":"7","G:\\reactTutorial\\ecommerce\\src\\components\\Navbar\\styles.js":"8","G:\\reactTutorial\\ecommerce\\src\\components\\Products\\styles.js":"9","G:\\reactTutorial\\ecommerce\\src\\lib\\commerce.js":"10","G:\\reactTutorial\\ecommerce\\src\\components\\Cart\\Cart.js":"11","G:\\reactTutorial\\ecommerce\\src\\components\\Cart\\styles.js":"12","G:\\reactTutorial\\ecommerce\\src\\components\\Cart\\CartItem\\CartItem.js":"13","G:\\reactTutorial\\ecommerce\\src\\components\\Cart\\CartItem\\styles.js":"14","G:\\reactTutorial\\ecommerce\\src\\components\\CheckoutForm\\Checkout\\Checkout.js":"15","G:\\reactTutorial\\ecommerce\\src\\components\\CheckoutForm\\Checkout\\styles.js":"16","G:\\reactTutorial\\ecommerce\\src\\components\\CheckoutForm\\AddressForm.js":"17","G:\\reactTutorial\\ecommerce\\src\\components\\CheckoutForm\\PaymentForm.js":"18","G:\\reactTutorial\\ecommerce\\src\\components\\CheckoutForm\\CustomTextField.js":"19","G:\\reactTutorial\\ecommerce\\src\\components\\CheckoutForm\\Review.js":"20"},{"size":153,"mtime":1606814804966,"results":"21","hashOfConfig":"22"},{"size":3166,"mtime":1606989313165,"results":"23","hashOfConfig":"22"},{"size":1102,"mtime":1606896951409,"results":"24","hashOfConfig":"22"},{"size":1840,"mtime":1606897158785,"results":"25","hashOfConfig":"22"},{"size":464,"mtime":1606816866555,"results":"26","hashOfConfig":"22"},{"size":235,"mtime":1606908089320,"results":"27","hashOfConfig":"22"},{"size":2119,"mtime":1606977524724,"results":"28","hashOfConfig":"22"},{"size":1857,"mtime":1606818899245,"results":"29","hashOfConfig":"22"},{"size":326,"mtime":1606819846007,"results":"30","hashOfConfig":"22"},{"size":142,"mtime":1606976314402,"results":"31","hashOfConfig":"22"},{"size":2684,"mtime":1606907204148,"results":"32","hashOfConfig":"22"},{"size":681,"mtime":1606898462843,"results":"33","hashOfConfig":"22"},{"size":2012,"mtime":1606977498161,"results":"34","hashOfConfig":"22"},{"size":391,"mtime":1606902320146,"results":"35","hashOfConfig":"22"},{"size":4826,"mtime":1606990744386,"results":"36","hashOfConfig":"22"},{"size":1384,"mtime":1606907972249,"results":"37","hashOfConfig":"22"},{"size":7454,"mtime":1606984128511,"results":"38","hashOfConfig":"22"},{"size":3749,"mtime":1606990742756,"results":"39","hashOfConfig":"22"},{"size":596,"mtime":1606989932738,"results":"40","hashOfConfig":"22"},{"size":1263,"mtime":1606984815217,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"10j228d",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"G:\\reactTutorial\\ecommerce\\src\\index.js",[],["84","85"],"G:\\reactTutorial\\ecommerce\\src\\App.js",[],"G:\\reactTutorial\\ecommerce\\src\\components\\Products\\Products.js",[],"G:\\reactTutorial\\ecommerce\\src\\components\\Products\\Product\\Product.js",[],"G:\\reactTutorial\\ecommerce\\src\\components\\Products\\Product\\styles.js",[],"G:\\reactTutorial\\ecommerce\\src\\components\\index.js",[],"G:\\reactTutorial\\ecommerce\\src\\components\\Navbar\\Navbar.js",[],"G:\\reactTutorial\\ecommerce\\src\\components\\Navbar\\styles.js",[],"G:\\reactTutorial\\ecommerce\\src\\components\\Products\\styles.js",[],"G:\\reactTutorial\\ecommerce\\src\\lib\\commerce.js",[],"G:\\reactTutorial\\ecommerce\\src\\components\\Cart\\Cart.js",[],"G:\\reactTutorial\\ecommerce\\src\\components\\Cart\\styles.js",[],"G:\\reactTutorial\\ecommerce\\src\\components\\Cart\\CartItem\\CartItem.js",[],"G:\\reactTutorial\\ecommerce\\src\\components\\Cart\\CartItem\\styles.js",[],"G:\\reactTutorial\\ecommerce\\src\\components\\CheckoutForm\\Checkout\\Checkout.js",["86"],"G:\\reactTutorial\\ecommerce\\src\\components\\CheckoutForm\\Checkout\\styles.js",[],"G:\\reactTutorial\\ecommerce\\src\\components\\CheckoutForm\\AddressForm.js",["87","88"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n    Button,\r\n    Grid,\r\n    InputLabel,\r\n    MenuItem,\r\n    Select,\r\n    Typography,\r\n} from \"@material-ui/core\";\r\nimport { FormProvider, useForm } from \"react-hook-form\";\r\n\r\nimport FormInput from \"./CustomTextField\";\r\nimport { commerce } from \"../../lib/commerce\";\r\n\r\nconst AddressForm = ({ token, next }) => {\r\n    const [shippingCountries, setShippingCountries] = useState([]);\r\n    const [shippingCountry, setShippingCountry] = useState(\"\");\r\n    const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\r\n    const [shippingSubdivision, setShippingSubdivision] = useState(\"\");\r\n    const [shippingOptions, setShippingOptions] = useState([]);\r\n    const [shippingOption, setShippingOption] = useState(\"\");\r\n\r\n    const methods = useForm();\r\n\r\n    const countries = Object.entries(shippingCountries).map(([code, name]) => ({\r\n        id: code,\r\n        label: name,\r\n    }));\r\n\r\n    const subdivisions = Object.entries(shippingSubdivisions).map(\r\n        ([code, name]) => ({\r\n            id: code,\r\n            label: name,\r\n        })\r\n    );\r\n\r\n    const options = shippingOptions.map((sO) => ({\r\n        id: sO.id,\r\n        label: `${sO.description} - (${sO.price.formatted_with_symbol})`,\r\n    }));\r\n\r\n    const fetchShippingCountries = async (checkoutTokenId) => {\r\n        const {\r\n            countries,\r\n        } = await commerce.services.localeListShippingCountries(\r\n            checkoutTokenId\r\n        );\r\n        setShippingCountries(countries);\r\n        setShippingCountry(Object.keys(countries)[0]);\r\n    };\r\n\r\n    const fetchSubdivisions = async (countryCode) => {\r\n        const { subdivisions } = await commerce.services.localeListSubdivisions(\r\n            countryCode\r\n        );\r\n        setShippingSubdivisions(subdivisions);\r\n        setShippingSubdivision(Object.keys(subdivisions)[0]);\r\n    };\r\n\r\n    const fetchShippingOptions = async (\r\n        checkoutTokenId,\r\n        country,\r\n        region = null\r\n    ) => {\r\n        const options = await commerce.checkout.getShippingOptions(\r\n            checkoutTokenId,\r\n            { country, region }\r\n        );\r\n        setShippingOptions(options);\r\n        setShippingOption(options[0].id);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchShippingCountries(token.id);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (shippingCountry) fetchSubdivisions(shippingCountry);\r\n    }, [shippingCountry]);\r\n\r\n    useEffect(() => {\r\n        if (shippingSubdivision)\r\n            fetchShippingOptions(\r\n                token.id,\r\n                shippingCountry,\r\n                shippingSubdivision\r\n            );\r\n    }, [shippingSubdivision]);\r\n\r\n    return (\r\n        <>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Shipping Address\r\n            </Typography>\r\n            <FormProvider {...methods}>\r\n                <form\r\n                    onSubmit={methods.handleSubmit((data) =>\r\n                        next({\r\n                            ...data,\r\n                            shippingCountry,\r\n                            shippingSubdivision,\r\n                            shippingOption,\r\n                        })\r\n                    )}\r\n                >\r\n                    <Grid container spacing={3}>\r\n                        <FormInput name=\"firstName\" label=\"First name\" />\r\n                        <FormInput name=\"lastName\" label=\"Last name\" />\r\n                        <FormInput name=\"address1\" label=\"Address\" />\r\n                        <FormInput name=\"email\" label=\"Email\" />\r\n                        <FormInput name=\"city\" label=\"City\" />\r\n                        <FormInput name=\"zip\" label=\"ZIP / Postal Code\" />\r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputLabel>Shipping Country</InputLabel>\r\n                            <Select\r\n                                value={shippingCountry}\r\n                                fullWidth\r\n                                onChange={(e) =>\r\n                                    setShippingCountry(e.target.value)\r\n                                }\r\n                            >\r\n                                {countries.map((country) => (\r\n                                    <MenuItem\r\n                                        key={country.id}\r\n                                        value={country.id}\r\n                                    >\r\n                                        {country.label}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputLabel>Shipping Subdivision</InputLabel>\r\n                            <Select\r\n                                value={shippingSubdivision}\r\n                                fullWidth\r\n                                onChange={(e) =>\r\n                                    setShippingSubdivision(e.target.value)\r\n                                }\r\n                            >\r\n                                {subdivisions.map((subdivision) => (\r\n                                    <MenuItem\r\n                                        key={subdivision.id}\r\n                                        value={subdivision.id}\r\n                                    >\r\n                                        {subdivision.label}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputLabel>Shipping Options</InputLabel>\r\n                            <Select\r\n                                value={shippingOption}\r\n                                fullWidth\r\n                                onChange={(e) =>\r\n                                    setShippingOption(e.target.value)\r\n                                }\r\n                            >\r\n                                {options.map((option) => (\r\n                                    <MenuItem key={option.id} value={option.id}>\r\n                                        {option.label}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <br />\r\n                    <div\r\n                        style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-between\",\r\n                        }}\r\n                    >\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            component={Link}\r\n                            to=\"/cart\"\r\n                            color=\"secondary\"\r\n                        >\r\n                            Back to Cart\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            type=\"submit\"\r\n                            color=\"primary\"\r\n                        >\r\n                            Next\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            </FormProvider>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AddressForm;\r\n","G:\\reactTutorial\\ecommerce\\src\\components\\CheckoutForm\\PaymentForm.js",["89"],"G:\\reactTutorial\\ecommerce\\src\\components\\CheckoutForm\\CustomTextField.js",[],"G:\\reactTutorial\\ecommerce\\src\\components\\CheckoutForm\\Review.js",[],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":43,"column":8,"nodeType":"96","endLine":43,"endColumn":14,"suggestions":"97"},{"ruleId":"94","severity":1,"message":"98","line":76,"column":8,"nodeType":"96","endLine":76,"endColumn":10,"suggestions":"99"},{"ruleId":"94","severity":1,"message":"100","line":89,"column":8,"nodeType":"96","endLine":89,"endColumn":29,"suggestions":"101"},{"ruleId":"102","severity":1,"message":"103","line":2,"column":18,"nodeType":"104","messageId":"105","endLine":2,"endColumn":22},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["108"],"React Hook useEffect has a missing dependency: 'token.id'. Either include it or remove the dependency array.",["109"],"React Hook useEffect has missing dependencies: 'shippingCountry' and 'token.id'. Either include them or remove the dependency array.",["110"],"no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},{"desc":"115","fix":"116"},"Update the dependencies array to be: [cart, history]",{"range":"117","text":"118"},"Update the dependencies array to be: [token.id]",{"range":"119","text":"120"},"Update the dependencies array to be: [shippingCountry, shippingSubdivision, token.id]",{"range":"121","text":"122"},[1327,1333],"[cart, history]",[2373,2375],"[token.id]",[2713,2734],"[shippingCountry, shippingSubdivision, token.id]"]